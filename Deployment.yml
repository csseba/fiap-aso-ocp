kind: Secret
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  selfLink: /api/v1/namespaces/fiap/secrets/blog-database
  name: blog-database
  namespace: fiap
data:
  database-name: YmxvZ2Ri
  database-password: c2FtcGxlZGI=
  database-user: c2FtcGxlZGI=
type: Opaque

---

kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.alpha.openshift.io/wait-for-ready: 'true'
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/fiap/deploymentconfigs/blog-database
  name: blog-database
  generation: 2
  namespace: fiap
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: blog-database
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: blog-database
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: blog-database
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: blog-database
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: blog-database
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

---

kind: Service
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.openshift.io/expose-uri: 'postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}'
  selfLink: /api/v1/namespaces/fiap/services/blog-database
  name: blog-database
  namespace: fiap
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: blog-database
  sessionAffinity: None

---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"blog-django-fiap:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"blog-django-fiap\")].image"}]
    openshift.io/generated-by: OpenShiftNewApp
  selfLink: /apis/apps/v1/namespaces/fiap/deployments/blog-django-fiap
  name: blog-django-fiap
spec:
  replicas: 2
  selector:
    matchLabels:
      deployment: blog-django-fiap
  template:
    metadata:
      creationTimestamp: null
      labels:
        deployment: blog-django-fiap
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      containers:
        - name: blog-django-fiap
          image: >-
            sebacs/blog-django-fiap@sha256:ec0149d51aac5db76abba4df956021c8d0f58b0e153160bd6b1eb8e967830bb5
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom: 
                secretKeyRef:
                  name: connection
                  key: connection
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      lifecycle:
              postStart:
                exec:
                  command: ["/bin/sh", "-c"]
                  args:
                  - >
                    sleep 60
                    cp .s2i/action_hooks/setup . &&
                    ./setup &&
                    grupo5 &&
                    grupo@fiap.com.br && 
                    grupocinco &&
                    grupocinco

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---

kind: Secret
apiVersion: v1
metadata:
  name: connection
  namespace: fiap
  selfLink: /api/v1/namespaces/fiap/secrets/connection
data:
  connection: cG9zdGdyZXNxbDovL3NhbXBsZWRiOnNhbXBsZWRiQGJsb2ctZGF0YWJhc2U6NTQzMi9ibG9nZGI=
type: Opaque

---

kind: Service
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  selfLink: /api/v1/namespaces/fiap/services/blog-django-fiap
  resourceVersion: '17488791'
  name: blog-django-fiap
  namespace: fiap
  labels:
    app: blog-django-fiap
    app.kubernetes.io/component: blog-django-fiap
    app.kubernetes.io/instance: blog-django-fiap
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    deployment: blog-django-fiap
  sessionAffinity: None

---

kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
    openshift.io/host.generated: 'true'
  selfLink: /apis/route.openshift.io/v1/namespaces/fiap/routes/blog-django-fiap
  name: blog-django-fiap
  namespace: fiap
  labels:
    app: blog-django-fiap
    app.kubernetes.io/component: blog-django-fiap
    app.kubernetes.io/instance: blog-django-fiap
spec:
  host: fase4-grupo5-fiap.apps.na46.prod.nextcle.com
  to:
    kind: Service
    name: blog-django-fiap
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None

---

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-atividade-fiap
  namespace: fiap
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blog-django-fiap
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 20
          type: Utilization
